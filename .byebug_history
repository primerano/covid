c
quit
row.methods
row
c
b 7
q
rows.map {|row| row.to_h}q
rows.map {|row| row.to_h}
rows.to_a.map {|row| row.to_h}
rows[0].to_h
rows[2].to_h
rows[2]
rows.to_a.map {|row| row.to_h}
rows.to_a.map {|row| row.to_hash}
rows
rows.to_a
n
rows.to_json
require 'json'
rows.class
rows.to_json
c
quit
foo = CSV.new(new_csv, include_headers=true)
foo.methods
foo.headers
foo = CSV.new(new_csv)
CSV.new
foo.headers
foo = new_csv.to_csv
new_csv.to_csv
new_csv.count
c
b 10
q
new_csv.count
b 10
c
new_csv[1]
new_csv.count
c
b 8
q
quit
new_csv[0]
new_csv.class
new_csv.count
new_csv
c
new_csv
c
b 8
c
x
quit
row.values_at(0..4) + [row['COUNTY'] + row['STATE']] + row.values_at[5..-1]
row.values_at(0..4) + row.values_at[5..-1]
row.values_at(0..5)
row.values_at(0..4)
row.values_at([0,1,2])
row.values_at(0,1,2)
row.values_at(1)
row.values_at
row.to_csv
row.methods
row
c
row
b 8
exit
rows.headers[0..4] + ["FIPS"] + rows.headers[5..-1]
(rows.headers[0..4] + ["FIPS"] + rows.headers[5..-1]).to_s
rows.headers[0..4] + ["FIPS"] + rows.headers[5..-1]
rows.headers
rows.headers[0..4] + rows.headers[5..-1]
rows.headers[0..4] + row.headers[5..-1]
rows.headers[0..5]
rows.headers[0..4]
rows.headers
